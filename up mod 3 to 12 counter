// Code your design here
module 3to12_up_counter(clk,rst,load,din,count);
  input [3:0]din;
  input clk,rst,load;
  output reg [3:0]count;
  
  always @(posedge clk)
    begin 
      count<=4'd3;
      begin
      if(rst)
        count<=0;
      else if (load==1 && count>=4'd3 && count<=4'd12)
        count<=din;
      else if(count==4'd12)
        count<=4'd3;
      else 
        count<=count+4'd1;
      end
    end
endmodule


// Code your testbench here
// or browse Examples
module tb();
  reg clk;
  reg load;
  reg rst;
  reg [3:0]din;
  wire [3:0]count;
  
  3to12_up_counter dut(.clk(clk),.load(load),.rst(rst),.din(din),.count(count));
  
  initial 
    begin
      clk=0;
      forever #5 clk=~clk;
    end
  initial 
    begin
      rst=1'b0;
      load=1'b0;
      din=4'd0;
      #10;
    end
  
  initial begin 
    {rst,load}=2'b10;din=4'd4;#10;
    {rst,load}=2'b01;din=4'd3;#10;
    {rst,load}=2'b00;din=4'd1;#10;
    {rst,load}=2'b00;din=4'd1;#10;
    {rst,load}=2'b00;din=4'd3;#10;
    {rst,load}=2'b00;din=4'd3;#10;
    {rst,load}=2'b00;din=4'd3;#10;
    {rst,load}=2'b00;din=4'd3;#10;
    {rst,load}=2'b00;din=4'd3;#10;
    {rst,load}=2'b00;din=4'd3;#10;
    {rst,load}=2'b00;din=4'd3;#10;
    {rst,load}=2'b01;din=4'd9;#10;
    
  end
  
  
  initial 
    begin
      $monitor($time," input din=%b , rst=%b , load =%b, output count=%b",din,rst,load,count);
      
      #200 $finish;
      
    end
  
endmodule
